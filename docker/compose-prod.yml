name: neu-ldap-mgnt

services:
  postgres:
    extends:
      file: ./compose-services.yml
      service: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  openldap:
    extends:
      file: ./compose-services.yml
      service: openldap
    environment:
      LDAP_ORGANISATION: ${LDAP_ORGANIZATION}
      LDAP_DOMAIN: ${LDAP_DOMAIN}
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD}
    volumes:
      - ldap-data:/var/lib/ldap
      - ldap-config:/etc/ldap/slapd.d

  api-build:
    extends:
      file: ./compose-services.yml
      service: api-build
    volumes:
      - api-app:/app

  api:
    extends:
      file: ./compose-services.yml
      service: api
    depends_on:
      openldap:
        condition: service_started
      api-build:
        condition: service_completed_successfully
    environment:
      LDAP_ADDRESS: openldap
      LDAP_PORT: 389
      LDAP_DOMAIN: ${LDAP_DOMAIN}
      LDAP_USERNAME: admin
      LDAP_PASSWORD: ${LDAP_ADMIN_PASSWORD}
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: ${POSTGRES_USER_PASSWORD}
      DEFAULT_ADMIN_NAME: ${DEFAULT_ADMIN_USERNAME}
      DEFAULT_ADMIN_PASSWORD: ${DEFAULT_ADMIN_PASSWORD}
      LOG_TO_DB: ${LOG_TO_DB}
    volumes:
      - api-app:/app:ro

  webapp-build:
    extends:
      file: ./compose-services.yml
      service: webapp-build
    volumes:
      - webapp-app:/app

  nginx:
    extends:
      file: ./compose-services.yml
      service: nginx
    depends_on:
      api-build:
        condition: service_completed_successfully
      webapp-build:
        condition: service_completed_successfully
      api:
        condition: service_started
    ports:
      - ${PORT}:80
    volumes:
      - ../docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - webapp-app:/app:ro

volumes:
  postgres-data:
  ldap-data:
  ldap-config:
  api-app:
  webapp-app:
