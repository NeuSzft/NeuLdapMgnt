@inherits LayoutComponentBase

<!--SWITCH TO SHOW INACTIVE OR ACTIVE TABLE-->
<div class="table-responsive rounded pb-1 px-1 border">
    <table class="table table-striped  table-borderless align-middle">
        <thead class="sticky-top">
            <tr>
                <th class="user-select-none" role="button" @onclick="@(() => SortTable("Id"))">
                    Id
                    @if (sortBy == "Id")
                    {
                        <i class="bi @GetSortIcon(isAscending)"></i>
                    }
                    else
                    {
                        <i class="bi bi-chevron-expand"></i>
                    }
                </th>
                <th class="user-select-none" role="button" @onclick="@(() => SortTable("Name"))">
                    Name
                    @if (sortBy == "Name")
                    {
                        <i class="bi @GetSortIcon(isAscending)"></i>
                    }
                    else
                    {
                        <i class="bi bi-chevron-expand"></i>
                    }
                </th>

                <th class="user-select-none" role="button" @onclick="@(() => SortTable("Username"))">
                    Username
                    @if (sortBy == "Username")
                    {
                        <i class="bi @GetSortIcon(isAscending)"></i>
                    }
                    else
                    {
                        <i class="bi bi-chevron-expand"></i>
                    }
                </th>
                <th class="user-select-none" role="button" @onclick="@(() => SortTable("IsAdmin"))">
                    Admin?
                    @if (sortBy == "IsAdmin")
                    {
                        <i class="bi @GetSortIcon(isAscending)"></i>
                    }
                    else
                    {
                        <i class="bi bi-chevron-expand"></i>
                    }
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var teacher in Teachers)
            {
                <tr>
                    <td class="rounded-start">@teacher.Id</td>
                    <td>@teacher.FullName</td>
                    <td>@teacher.Username</td>
                    <td class="rounded-end">
                        <input type="checkbox"
                               class="form-check-input m-auto"
                               checked="@(DatabaseLocal.Admins.Exists(x => x.Equals(teacher.Id)))"
                               disabled />
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@code {
    [Parameter]
    public List<Teacher> Teachers { get; set; } = new();
    private string sortBy = string.Empty;
    private bool isAscending = false;

    private void SortTable(string propertyName)
    {
        if (sortBy == propertyName)
        {
            isAscending = !isAscending;
        }
        else
        {
            sortBy = propertyName;
            isAscending = true;
        }

        switch (propertyName)
        {
            case "Id":
                Teachers = isAscending
                ? Teachers
                    .OrderBy(x => x.Id)
                    .ToList()
                : Teachers
                    .OrderByDescending(x => x.Id)
                    .ToList();
                break;

            case "Name":
                Teachers = isAscending
                ? Teachers
                    .OrderBy(x => x.FullName)
                    .ToList()
                : Teachers
                    .OrderByDescending(x => x.FullName)
                    .ToList();
                break;

            case "Username":
                Teachers = isAscending
                ? Teachers
                    .OrderBy(x => x.Username)
                    .ToList()
                : Teachers
                    .OrderByDescending(x => x.Username)
                    .ToList();
                break;

            default:
                break;
        }
    }

    private string GetSortIcon(bool asc) => asc ? "bi-sort-up" : "bi-sort-down";
}

