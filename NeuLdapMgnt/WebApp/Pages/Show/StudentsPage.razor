@page "/students"

<PageTitle>Students</PageTitle>

<div class="row justify-content-between g-2">
	<div class="col">
		<h1>Students</h1>
	</div>
	<div class="col text-end">
		<ButtonRefresh OnClick="OnRefresh" Text="Refresh" />
	</div>
</div>

@if (isLoading)
{
	<Loading Text="Loading students" />
}
else if (isUpdating)
{
	<Loading Text="Updating students" />
}
else if (isDeleting)
{
	<Loading Text="Deleting students" />
}
else if (!LocalDbService.Students.Any())
{
	<div class="d-flex justify-content-center text-center">
		<div>
			<h3 class="my-4">There are no students in the database</h3>
			<ButtonAdd Text="Add Students" OnClick="ToAddPage" />
		</div>
	</div>
}
else
{
	<TableStudents Students="LocalDbService.Students"
				   OnStudentsDelete="HandleDeleteStudents"
				   OnStudentsUpdate="HandleUpdateStudents" />
}

@code {
	private bool isLoading = true;
	private bool isDeleting = false;
	private bool isUpdating = false;

	protected override async Task OnInitializedAsync()
	{
		ApiRequests.EnsureAuthentication(NavManager);
		isLoading = true;
		await LocalDbService.FetchClasses();
		await OnRefresh();
		isLoading = false;
	}

	private async Task HandleDeleteStudents(IEnumerable<Student> students)
	{
		isDeleting = true;
		await LocalDbService.DeleteStudentsInBulk(students);
		await OnRefresh();
		isDeleting = false;
	}

	private async Task HandleUpdateStudents((IEnumerable<Student>, string, bool) context)
	{
		var (students, cls, isInactive) = context;
		isUpdating = true;
		await LocalDbService.UpdateStudentsInBulk(students, cls, isInactive);
		await OnRefresh();
		isUpdating = false;
	}

	private async Task OnRefresh()
	{
		await LocalDbService.FetchStudents();
	}

	private void ToAddPage() => NavManager.NavigateTo("/students/add");
}


