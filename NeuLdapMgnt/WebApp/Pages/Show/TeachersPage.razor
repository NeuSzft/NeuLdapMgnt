@page "/teachers"

<PageTitle>Teachers</PageTitle>

<div class="row justify-content-between g-2">
	<div class="col">
		<h1>Teachers</h1>
	</div>
	<div class="col text-end">
		<ButtonRefresh OnClick="FetchData" Text="Refresh" />
	</div>
</div>

@if (isLoading)
{
	<Loading Text="Loading teachers" />
}
else if (!LocalDbService.Teachers.Any())
{
	<div class="d-flex justify-content-center text-center">
		<div>
			<h3 class="my-4">There are no teachers in the database</h3>
			<ButtonAdd Text="Add Teachers" OnClick="ToAddPage" />
		</div>
	</div>
}
else
{
	<TableTeachers Teachers="LocalDbService.Teachers"
				   OnTeachersDelete="HandleDeleteTeachers"
				   OnTeachersUpdate="HandleUpdateTeachers" />
}

@code {
	private bool isLoading = false;

	protected override async Task OnInitializedAsync()
	{
		ApiRequests.EnsureAuthentication(NavManager);
		isLoading = true;
		await FetchData();
		isLoading = false;
	}

	private async Task HandleDeleteTeachers(IEnumerable<Teacher> teachers)
	{
		isLoading = true;
		StateHasChanged();
		await LocalDbService.DeleteTeachersInBulk(teachers);
		await FetchData();
		isLoading = false;
	}

	private async Task HandleUpdateTeachers((IEnumerable<Teacher>, bool, bool) context)
	{
		var (teachers, isAdmin, isInactive) = context;
		isLoading = true;
		await LocalDbService.UpdateTeachersInBulk(teachers, isAdmin, isInactive);
		await FetchData();
		isLoading = false;
	}

	private async Task FetchData()
	{
		await LocalDbService.FetchClasses();
		await LocalDbService.FetchTeachers();
		await LocalDbService.FetchAdmins();
	}

	private void ToAddPage() => NavManager.NavigateTo("/teachers/add");
}

