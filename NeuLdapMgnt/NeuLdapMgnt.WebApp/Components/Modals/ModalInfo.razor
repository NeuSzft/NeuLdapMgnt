<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">@Title</h5>
            <button type="button" class="btn-close" data-bs-dismiss="@Name" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <p>@Body</p>
        </div>
        <div class="modal-footer">
            @if (ButtonClose)
            {
                <button type="button" class="btn btn-secondary" data-bs-dismiss="@Name">Close</button>
            }
            @if (ButtonSave)
            {
                <ButtonSave Text="Save changes" OnClick="HandleOnSave" />
            }
            @if (ButtonDelete)
            {
                <ButtonDelete Text="Delete" OnClick="HandleOnDelete" />
            }
        </div>
    </div>
</div>


@code {
    [Parameter]
    public string Title { get; set; } = string.Empty;

    [Parameter]
    public string Name { get; set; } = "modal";

    [Parameter]
    public string Body { get; set; } = string.Empty;

    [Parameter]
    public bool ButtonClose { get; set; } = true;

    [Parameter]
    public bool ButtonSave { get; set; } = true;

    [Parameter]
    public bool ButtonDelete { get; set; } = false;

    [Parameter]
    public EventCallback OnSave { get; set; } 

    [Parameter]
    public EventCallback OnDelete { get; set; }

    private async Task HandleOnSave()
    {
        if (OnSave.HasDelegate)
        {
            await OnSave.InvokeAsync();
        }
    }

    private async Task HandleOnDelete()
    {
        if (OnDelete.HasDelegate)
        {
            await OnDelete.InvokeAsync();
        }
    }
}
